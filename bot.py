import logging
import os
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import Message
import httpx

load_dotenv()  # —ç—Ç–æ—Ç –≤—ã–∑–æ–≤ –∑–∞–≥—Ä—É–∑–∏—Ç –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
DJANGO_API_URL = os.getenv('DJANGO_API_URL')

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start c —Ç–æ–∫–µ–Ω–æ–º
@dp.message(CommandStart(deep_link=True))
async def process_start_with_token(message: Message, command: CommandStart):
    token = command.args
    if not token:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏.")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –∫ Django REST API
    async with httpx.AsyncClient() as client:
        resp = await client.post(
            DJANGO_API_URL,
            json={
                "token": token,
                "telegram_id": str(message.from_user.id),
                "telegram_username": message.from_user.username or "",
            },
            timeout=10
        )

    if resp.status_code == 200:
        await message.answer("‚úÖ –í–∞—à Telegram —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∞–∫–∫–∞—É–Ω—Ç—É —Å–∞–π—Ç–∞!")
    elif resp.status_code == 400:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏–π —Ç–æ–∫–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π QR –Ω–∞ —Å–∞–π—Ç–µ.")
    else:
        await message.answer("üö´ –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –ù–∞ —Å–ª—É—á–∞–π –æ–±—ã—á–Ω–æ–≥–æ /start
@dp.message(CommandStart())
async def process_start_no_token(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ.")

async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
